mkdir socket-chat
cd socket-chat
npm init -y

npm install express socket.io

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Chat</title>
  <style>
    #messages {
      height: 300px;
      overflow-y: scroll;
      border: 1px solid #ccc;
      margin-bottom: 10px;
    }
  </style>
</head>
<body>
  <div id="messages"></div>
  <form id="message-form">
    <input type="text" id="message-input" autocomplete="off" autofocus>
    <button type="submit">Send</button>
  </form>
  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();
    const messages = document.getElementById('messages');
    const messageForm = document.getElementById('message-form');
    const messageInput = document.getElementById('message-input');

    socket.on('message', (data) => {
      const messageElement = document.createElement('p');
      messageElement.textContent = data.message;
      messages.appendChild(messageElement);
      messages.scrollTop = messages.scrollHeight;
    });

    messageForm.addEventListener('submit', (e) => {
      e.preventDefault();
      if (messageInput.value.trim()) {
        socket.emit('message', { message: messageInput.value });
        messageInput.value = '';
      }
    });
  </script>
</body>
</html>

const express = require('express');
const app = express();
const http = require('http').createServer(app);
const io = require('socket.io')(http);

app.use(express.static('public'));

io.on('connection', (socket) => {
  console.log('a user connected');

  socket.on('disconnect', () => {
    console.log('user disconnected');
  });

  socket.on('message', (data) => {
    io.emit('message', data);
  });
});

const PORT = process.env.PORT || 3000;
http.listen(PORT, () => {
  console.log(`listening on *:${PORT}`);
});

node server.js